===========================================================
Doctest for module `1-my_list.py`
===========================================================

Import module
--------------------
	>>> my_list = __import__('1-my_list').MyList

Create class instances
---------------------------------
	>>> obj1 = my_list()
	>>> obj2 = my_list()

Check equality of two instances
-----------------------
	>>> id(obj1) == id(obj2)
	False

Check for the sorted list
----------------------------
	>>> obj1.extend([1, 4, 3, 6])
	>>> obj1
	[1, 4, 3, 6]
	>>> obj1.print_sorted()
	[1, 3, 4, 6]
	>>> len(obj1)
	4

check for argument to the class
--------------------------------
	>>> obj2 = my_list([])
	>>> obj2.print_sorted()
	[]
	>>> obj2 = my_list(1)
	Traceback (most recent call last):
		...
	TypeError: 'int' object is not iterable
	>>> obj2 = my_list("2")
	>>> obj2.print_sorted()
	['2']
	>>> obj2 = my_list([1, 4, 3, 6])
	>>> obj1.print_sorted()
	[1, 3, 4, 6]

Check for sorting of list with 1 element
------------------------------------------
	>>> obj1 = my_list()
	>>> obj1.append(1)
	>>> obj1.print_sorted()
	[1]

Check for sorting of list with same elements
--------------------------------------------------
	>>> obj1 = my_list()
	>>> obj1.extend([1, 1, 1, 1])
	>>> obj1.print_sorted()
	[1, 1, 1, 1]

Check for sorting of list with negative elements
-----------------------------------------------------
	>>> obj1 = my_list()
	>>> obj1.extend([3, -3 , 5, -6, 9, -1, 0])
	>>> obj1.print_sorted()
	[-6, -3, -1, 0, 3, 5, 9]

Check for a list object with the class method
-----------------------------------------------
	>>> my_list = [1, 5, 7, 4]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...
	AttributeError: 'list' object has no attribute 'print_sorted'
