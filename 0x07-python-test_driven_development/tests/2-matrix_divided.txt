========================================================
DocTests for `2-matrix_divided` module.
========================================================
	The module contains a single function `matrix_divided`.

`matrix_divided` divide the element of a matrix(lists of list) by an integer

[***]The functions conains two argument
	matrix(list of list): this is the list whose elements is do be divided
	div(int): the number to divide the element of matrix by

[*****] The function returns a new matrix whose element is the corresponding result	   of the elements of argument `matrix` divided by argument `div` 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

import the fuction
---------------------------
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check for division by zero
----------------------------
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Check for list of list of integers or float
----------------------------------------------------------
	>>> matrix = [2, 4, 6, 8, 10, 12]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[2, 4, 6], [8, 10, 12]]
	>>> matrix_divided(matrix, 2)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix = [[2.24, 4.68], [2.3, 4.56]]
	>>> matrix_divided(matrix, 2)
	[[1.12, 2.34], [1.15, 2.28]]

	>>> matrix = [[9, 0.3], [3.3, 3]]
	>>> matrix_divided(matrix, 3)
	[[3.0, 0.1], [1.1, 1.0]]

	>>> matrix = [[2, 4, 6], [8, 10, "3"]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[2, 4, 6], [8, 10, float('inf')]]
	>>> matrix_divided(matrix, 2)
	[[1.0, 2.0, 3.0], [4.0, 5.0, inf]]

	>>> matrix = [[2, 4, 6], [8, 10, float('nan')]]
	>>> matrix_divided(matrix, 2)
	[[1.0, 2.0, 3.0], [4.0, 5.0, nan]]

	>>> matrix = [[[2,4], [2, 4]], [6, 8]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

check for division with non integer or float
-------------------------------------------------
	>>> matrix = [[2, 4, 6], [8, 10, 12]]
	>>> matrix_divided(matrix, 2+3j)
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(matrix, "4")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(matrix, [1, 3])
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
	
	>>> matrix_divided(matrix, float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]

Check for empty list
--------------------------------------------
	>>> matrix_divided([], 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2], []], 2)
	Traceback (most recent call last):
		,,,
	TypeError: Each row of the matrix must have the same size
